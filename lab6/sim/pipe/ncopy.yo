                            | # name: Yitian Zhou
                            | # student_id: 518030910237
                            | 
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x000:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
                            | 
0x000: 6300                 | 	xorq %rax,%rax		# count = 0;
0x002: 6222                 | 	andq %rdx,%rdx		# len > 0?
0x004: 760e00000000000000   | 	jg Loop		# if so, goto Loop:
0x00d: 90                   | 	ret
                            | 	
                            | 
0x00e:                      | Loop:	
0x00e: c0f2f7ffffffffffffff | 	iaddq $-9, %rdx			# to test if len > 8
0x018: 72b201000000000000   | 	jl Last_Loop		# if so, goto Last_Loop:
                            | 
0x021: 50870000000000000000 | 	mrmovq (%rdi), %r8	    # read val from src...
0x02b: 50970800000000000000 | 	mrmovq 8(%rdi), %r9		# read val1 from src+1...
0x035: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10	# read val2 from src+2...
0x03f: 50b71800000000000000 | 	mrmovq 24(%rdi), %r11	# read val3 from src+3...
0x049: 50c72000000000000000 | 	mrmovq 32(%rdi), %r12	# read val4 from src+4...
0x053: 50d72800000000000000 | 	mrmovq 40(%rdi), %r13	# read val5 from src+5...
0x05d: 50e73000000000000000 | 	mrmovq 48(%rdi), %r14	# read val6 from src+6...
0x067: 50173800000000000000 | 	mrmovq 56(%rdi), %rcx	# read val7 from src+7...
0x071: 50374000000000000000 | 	mrmovq 64(%rdi), %rbx	# read val7 from src+8...
                            |                                                                   
                            | 	
0x07b: 40860000000000000000 | 	rmmovq %r8, (%rsi)	    # ...and store src it to dst
0x085: 6288                 | 	andq %r8, %r8		    # val1 <= 0?
0x087: 719a00000000000000   | 	jle Npos1		    # if so, goto Npos1:
0x090: c0f00100000000000000 | 	iaddq $1, %rax			# count+=1
0x09a:                      | Npos1:
0x09a: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)	# ...and store src+1 it to dst+1
0x0a4: 6299                 | 	andq %r9, %r9  	    # val2 <= 0?
0x0a6: 71b900000000000000   | 	jle Npos2		    # if so, goto Npos2:
0x0af: c0f00100000000000000 | 	iaddq $1, %rax			# count+=1
0x0b9:                      | Npos2:
0x0b9: 40a61000000000000000 | 	rmmovq %r10, 16(%rsi)	# ...and store src+2 it to dst+2
0x0c3: 62aa                 | 	andq %r10, %r10		    # val3 <= 0?
0x0c5: 71d800000000000000   | 	jle Npos3		    # if so, goto Npos3:
0x0ce: c0f00100000000000000 | 	iaddq $1, %rax			# count+=1
0x0d8:                      | Npos3:
0x0d8: 40b61800000000000000 | 	rmmovq %r11, 24(%rsi)	# ...and store src+3 it to dst+3
0x0e2: 62bb                 | 	andq %r11, %r11		    # val4 <= 0?
0x0e4: 71f700000000000000   | 	jle Npos4		    # if so, goto Npos4:
0x0ed: c0f00100000000000000 | 	iaddq $1, %rax          # count+=1
0x0f7:                      | Npos4:															
0x0f7: 40c62000000000000000 | 	rmmovq %r12, 32(%rsi)	    # ...and store src+4 it to dst+4
0x101: 62cc                 | 	andq %r12, %r12		    # val5 <= 0?
0x103: 711601000000000000   | 	jle Npos5		    # if so, goto Npos5:
0x10c: c0f00100000000000000 | 	iaddq $1, %rax			# count+=1
0x116:                      | Npos5:
0x116: 40d62800000000000000 | 	rmmovq %r13, 40(%rsi)	# ...and store src+5 it to dst+5
0x120: 62dd                 | 	andq %r13, %r13  	    # val6 <= 0?
0x122: 713501000000000000   | 	jle Npos6		    # if so, goto Npos6:
0x12b: c0f00100000000000000 | 	iaddq $1, %rax			# count+=1
0x135:                      | Npos6:															
0x135: 40e63000000000000000 | 	rmmovq %r14, 48(%rsi)	# ...and store src+4 it to dst+6
0x13f: 62ee                 | 	andq %r14, %r14		    # val7 <= 0?
0x141: 715401000000000000   | 	jle Npos7		    # if so, goto Npos7:
0x14a: c0f00100000000000000 | 	iaddq $1, %rax			# count+=1
0x154:                      | Npos7:
0x154: 40163800000000000000 | 	rmmovq %rcx, 56(%rsi)	# ...and store src+5 it to dst+7
0x15e: 6211                 | 	andq %rcx, %rcx  	    # val8 <= 0?
0x160: 717301000000000000   | 	jle Npos8		    # if so, goto Npos8:
0x169: c0f00100000000000000 | 	iaddq $1, %rax			# count+=1
0x173:                      | Npos8:
0x173: 40364000000000000000 | 	rmmovq %rbx, 64(%rsi)	# ...and store src+5 it to dst+7
0x17d: 6233                 | 	andq %rbx, %rbx  	    # val8 <= 0?
0x17f: 719201000000000000   | 	jle Npos9		    # if so, goto Npos9:
0x188: c0f00100000000000000 | 	iaddq $1, %rax			# count+=1
0x192:                      | Npos9:
0x192: c0f74800000000000000 | 	iaddq $72, %rdi			# src+=9
0x19c: c0f64800000000000000 | 	iaddq $72, %rsi			# dst+=9
0x1a6: 6222                 | 	andq %rdx,%rdx			# test len>0
0x1a8: 760e00000000000000   | 	jg Loop				# if so, goto Loop:
0x1b1: 90                   | 	ret
                            | 
0x1b2:                      | Last_Loop:
0x1b2: c0f20900000000000000 | 	iaddq $9, %rdx
0x1bc: 739903000000000000   | 	je Done				# if len=0, goto Done:
                            | #Last:
                            | 	
                            | #	mrmovq (%rdi), %r8	    # read val from src...
                            | #	iaddq $8, %rsi
                            | #	andq %r8, %r8		    # val1 <= 0?
                            | #	jle Nposs1		    # if so, goto Nposs1:
                            | #	iaddq $1, %rax
                            | #Nposs1:
                            | #	rmmovq %r8, -8(%rsi)	# ...and store src it to dst
                            | #	iaddq $8, %rdi
                            | #	iaddq $-1, %rdx
                            | #	jg Last				#if len>0, goto Last:
                            | #	ret  
                            | 
0x1c5: 50870000000000000000 | 	mrmovq (%rdi), %r8	    # read val from src...
0x1cf: 50970800000000000000 | 	mrmovq 8(%rdi), %r9		# read val from src+1...
0x1d9: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10	# read val from src+2...
0x1e3: 50b71800000000000000 | 	mrmovq 24(%rdi), %r11	# read val from src+3...
0x1ed: 50c72000000000000000 | 	mrmovq 32(%rdi), %r12	# read val from src+4...	
0x1f7: 50d72800000000000000 | 	mrmovq 40(%rdi), %r13	# read val from src+5...
0x201: 50e73000000000000000 | 	mrmovq 48(%rdi), %r14	# read val from src+6...
0x20b: 50173800000000000000 | 	mrmovq 56(%rdi), %rcx	# read val from src+7...	
                            | 						
0x215: 40860000000000000000 |     rmmovq %r8, (%rsi)	# ...and store src it to dst
0x21f: 6288                 | 	andq %r8, %r8		    # val1 <= 0?
0x221: 713402000000000000   | 	jle Nposs1		    # if so, goto Nposs1:
0x22a: c0f00100000000000000 | 	iaddq $1, %rax			# count+=1
0x234:                      | Nposs1:
0x234: c0f2ffffffffffffffff | 	iaddq $-1, %rdx			# len--
0x23e: 764802000000000000   | 	jg Nposs11			# else, goto Nposs11: 
0x247: 90                   | 	ret
0x248:                      | Nposs11:
0x248: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)	# ...and store src+1 it to dst+1
0x252: 6299                 | 	andq %r9, %r9  	    # val2 <= 0?
0x254: 716702000000000000   | 	jle Nposs2		    # if so, goto Nposs2:
0x25d: c0f00100000000000000 | 	iaddq $1, %rax			# count+=1
0x267:                      | Nposs2:
0x267: c0f2ffffffffffffffff | 	iaddq $-1, %rdx			# len--
0x271: 767b02000000000000   | 	jg Nposs22			# else, goto Nposs22: 
0x27a: 90                   | 	ret
0x27b:                      | Nposs22:
0x27b: 40a61000000000000000 | 	rmmovq %r10, 16(%rsi)	# ...and store src+2 it to dst+2
0x285: 62aa                 | 	andq %r10, %r10		    # val3 <= 0?
0x287: 719a02000000000000   | 	jle Nposs3		    # if so, goto Nposs3:
0x290: c0f00100000000000000 | 	iaddq $1, %rax			# count+=1
0x29a:                      | Nposs3:
0x29a: c0f2ffffffffffffffff | 	iaddq $-1, %rdx			# len--
0x2a4: 76ae02000000000000   | 	jg Nposs33			# else, goto Nposs33: 
0x2ad: 90                   | 	ret
0x2ae:                      | Nposs33:
0x2ae: 40b61800000000000000 | 	rmmovq %r11, 24(%rsi)	# ...and store src+3 it to dst+3
0x2b8: 62bb                 | 	andq %r11, %r11		    # val4 <= 0?
0x2ba: 71cd02000000000000   | 	jle Nposs4		    # if so, goto Nposs4:
0x2c3: c0f00100000000000000 | 	iaddq $1, %rax          # count+=1
0x2cd:                      | Nposs4:	
0x2cd: c0f2ffffffffffffffff | 	iaddq $-1, %rdx			# len--
0x2d7: 76e102000000000000   | 	jg Nposs44			# else, goto Nposs44: 
0x2e0: 90                   | 	ret
0x2e1:                      | Nposs44:
0x2e1: 40c62000000000000000 | 	rmmovq %r12, 32(%rsi)	# ...and store src+2 it to dst+2
0x2eb: 62cc                 | 	andq %r12, %r12		    # val5 <= 0?
0x2ed: 710003000000000000   | 	jle Nposs5		    # if so, goto Nposs5:
0x2f6: c0f00100000000000000 | 	iaddq $1, %rax			# count+=1
0x300:                      | Nposs5:
0x300: c0f2ffffffffffffffff | 	iaddq $-1, %rdx			# len--
0x30a: 761403000000000000   | 	jg Nposs55			# else, goto Nposs55: 
0x313: 90                   | 	ret
0x314:                      | Nposs55:
0x314: 40d62800000000000000 | 	rmmovq %r13, 40(%rsi)	# ...and store src+2 it to dst+2
0x31e: 62dd                 | 	andq %r13, %r13		    # val6 <= 0?
0x320: 713303000000000000   | 	jle Nposs6		    # if so, goto Nposs6:
0x329: c0f00100000000000000 | 	iaddq $1, %rax			# count+=1
0x333:                      | Nposs6:
0x333: c0f2ffffffffffffffff | 	iaddq $-1, %rdx			# len--
0x33d: 764703000000000000   | 	jg Nposs66			# else, goto Nposs66: 
0x346: 90                   | 	ret
0x347:                      | Nposs66:
0x347: 40e63000000000000000 | 	rmmovq %r14, 48(%rsi)	# ...and store src+2 it to dst+2
0x351: 62ee                 | 	andq %r14, %r14		    # val6 <= 0?
0x353: 716603000000000000   | 	jle Nposs7		    # if so, goto Nposs7:
0x35c: c0f00100000000000000 | 	iaddq $1, %rax			# count+=1
0x366:                      | Nposs7:
0x366: c0f2ffffffffffffffff | 	iaddq $-1, %rdx			# len--
0x370: 767a03000000000000   | 	jg Nposs77			# else, goto Nposs77: 
0x379: 90                   | 	ret
0x37a:                      | Nposs77:
0x37a: 40163800000000000000 | 	rmmovq %rcx, 56(%rsi)	# ...and store src it to dst
0x384: 6211                 | 	andq %rcx, %rcx 	    # val7 <= 0?
0x386: 719903000000000000   | 	jle Done		    # if so, goto Done:
0x38f: c0f00100000000000000 | 	iaddq $1, %rax			# count+=1
                            | 
                            | 
                            | 	
                            | 	
                            | 
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x399:                      | Done:
0x399: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x39a:                      | End:
                            | #/* $end ncopy-ys */
